/*:
# LeetCode.playground
Bugen's LeetCode solutions in Swift Playground.

> Progress: 302 / 1422 = 21.24%

## Problems
- [X] 😊 [[Q]](https://leetcode.com/problems/two-sum/) [[S]](1-Two%20Sum) 0001. Two Sum *[Hash Table]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/add-two-numbers/) [[S]](2-Add%20Two%20Numbers) 0002. Add Two Numbers *[Linked List]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/longest-substring-without-repeating-characters/) [[S]](3-Longest%20Substring%20Without%20Repeating%20Characters) 0003. Longest Substring Without Repeating Characters *[Array]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/median-of-two-sorted-arrays/) [[S]](4-Median%20of%20Two%20Sorted%20Arrays) 0004. Median of Two Sorted Arrays *[Array, Binary Search]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/longest-palindromic-substring/) [[S]](5-Longest%20Palindromic%20Substring) 0005. Longest Palindromic Substring *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/zigzag-conversion/) [[S]](6-ZigZag%20Conversion) 0006. ZigZag Conversion *[Array]*
- [X] 😊 [[Q]](https://leetcode.com/problems/reverse-integer/) [[S]](7-Reverse%20Integer) 0007. Reverse Integer *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/string-to-integer-atoi/) [[S]](8-String%20to%20Integer%20(atoi)) 0008. String to Integer (atoi) *[String]*
- [X] 😊 [[Q]](https://leetcode.com/problems/palindrome-number/) [[S]](9-Palindrome%20Number) 0009. Palindrome Number *[Mathematics]*
- [X] 😫 [[Q]](https://leetcode.com/problems/regular-expression-matching/) [[S]](10.%20Regular%20Expression%20Matching) 0010. Regular Expression Matching *[String, DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/container-with-most-water/) [[S]](11.%20Container%20With%20Most%20Water) 0011. Container With Most Water *[Two Pointers, Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/integer-to-roman/) [[S]](12.%20Integer%20to%20Roman) 0012. Integer to Roman *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/roman-to-integer/) [[S]](13.%20Roman%20to%20Integer) 0013. Roman to Integer *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/longest-common-prefix/) [[S]](14.%20Longest%20Common%20Prefix) 0014. Longest Common Prefix *[String]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/3sum/) [[S]](15.%203Sum) 0015. 3Sum *[Two Pointers]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/3sum-closest/) [[S]](16.%203Sum%20Closest) 0016. 3Sum Closest *[Two Pointers]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/letter-combinations-of-a-phone-number/) [[S]](17.%20Letter%20Combinations%20of%20a%20Phone%20Number) 0017. Letter Combinations of a Phone Number *[Array]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/remove-nth-node-from-end-of-list/) [[S]](19.%20Remove%20Nth%20Node%20From%20End%20of%20List) 0019. Remove Nth Node From End of List *[Linked List, Two Pointers]*
- [X] 😊 [[Q]](https://leetcode.com/problems/valid-parentheses/) [[S]](20.%20Valid%20Parentheses) 0020. Valid Parentheses *[Stack]*
- [X] 😊 [[Q]](https://leetcode.com/problems/merge-two-sorted-lists/) [[S]](21.%20Merge%20Two%20Sorted%20Lists) 0021. Merge Two Sorted Lists *[Linked List]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/generate-parentheses/) [[S]](22.%20Generate%20Parentheses) 0022. Generate Parentheses *[String]*
- [X] 😫 [[Q]](https://leetcode.com/problems/merge-k-sorted-lists/) [[S]](23.%20Merge%20k%20Sorted%20Lists) 0023. Merge k Sorted Lists *[Sort, Linked List]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/swap-nodes-in-pairs/) [[S]](24.%20Swap%20Nodes%20in%20Pairs) 0024. Swap Nodes in Pairs *[Linked List]*
- [X] 😫 [[Q]](https://leetcode.com/problems/reverse-nodes-in-k-group/) [[S]](25.%20Reverse%20Nodes%20in%20k-Group) 0025. Reverse Nodes in k-Group *[Linked List]*
- [X] 😊 [[Q]](https://leetcode.com/problems/remove-duplicates-from-sorted-array/) [[S]](26.%20Remove%20Duplicates%20from%20Sorted%20Array) 0026. Remove Duplicates from Sorted Array *[Array, Two Pointers]*
- [X] 😊 [[Q]](https://leetcode.com/problems/remove-element/) [[S]](27.%20Remove%20Element) 0027. Remove Element *[Array, Two Pointers]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/implement-strstr/) [[S]](28.%20Implement%20strStr()) 0028. Implement strStr() *[String]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/divide-two-integers/) [[S]](29.%20Divide%20Two%20Integers) 0029. Divide Two Integers *[Bit Manipulation, Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/next-permutation/) [[S]](31.%20Next%20Permutation) 0031. Next Permutation *[Sort, O(n), Binary Search]*
- [X] 😫 [[Q]](https://leetcode.com/problems/longest-valid-parentheses/) [[S]](32-Longest%20Valid%20Parentheses) 0032. Longest Valid Parentheses *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/search-in-rotated-sorted-array/) [[S]](33.%20Search%20in%20Rotated%20Sorted%20Array) 0033. Search in Rotated Sorted Array *[Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/) [[S]](34.%20Find%20First%20and%20Last%20Position%20of%20Element%20in%20Sorted%20Array) 0034. Find First and Last Position of Element in Sorted Array *[Binary Search]*
- [X] 😊 [[Q]](https://leetcode.com/problems/search-insert-position/) [[S]](35.%20Search%20Insert%20Position) 0035. Search Insert Position *[Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/valid-sudoku/) [[S]](36.%20Valid%20Sudoku) 0036. Valid Sudoku *[Hash Table]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/combination-sum/) [[S]](39.%20Combination%20Sum) 0039. Combination Sum *[DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/combination-sum-ii/) [[S]](40.%20Combination%20Sum%20II) 0040. Combination Sum II *[DFS]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/first-missing-positive/) [[S]](41.%20First%20Missing%20Positive) 0041. First Missing Positive *[Array]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/trapping-rain-water/) [[S]](42-Trapping%20Rain%20Water) 0042. Trapping Rain Water *[Stack]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/multiply-strings/) [[S]](43.%20Multiply%20Strings) 0043. Multiply Strings *[Mathematics]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/wildcard-matching/) [[S]](44-Wildcard%20Matching) 0044. Wildcard Matching *[DFS, Greedy]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/jump-game-ii/) [[S]](45-Jump%20Game%20II) 0045. Jump Game II *[Greedy, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/rotate-image/) [[S]](48.%20Rotate%20Image) 0048. Rotate Image *[Array, Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/powx-n/) [[S]](50-Pow(x,%20n)) 0050. Pow(x, n) *[Mathematics]*
- [X] 😫 [[Q]](https://leetcode.com/problems/n-queens/) [[S]](51.%20N-Queens) 0051. N-Queens *[DFS, Bit Manipulation]*
- [X] 😫 [[Q]](https://leetcode.com/problems/n-queens-ii/) [[S]](52.%20N-Queens%20II) 0052. N-Queens II 
- [X] 😊 [[Q]](https://leetcode.com/problems/maximum-subarray/) [[S]](53-Maximum%20Subarray) 0053. Maximum Subarray *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/jump-game/) [[S]](55-Jump%20Game) 0055. Jump Game *[Greedy]*
- [X] 😫 [[Q]](https://leetcode.com/problems/permutation-sequence/) [[S]](60.%20Permutation%20Sequence) 0060. Permutation Sequence *[Mathematics, String]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/unique-paths/) [[S]](62.%20Unique%20Paths) 0062. Unique Paths *[Mathematics, DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/unique-paths-ii/) [[S]](63.%20Unique%20Paths%20II) 0063. Unique Paths II *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/minimum-path-sum/) [[S]](64.%20Minimum%20Path%20Sum) 0064. Minimum Path Sum *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/plus-one/) [[S]](66.%20Plus%20One) 0066. Plus One 
- [X] 😊 [[Q]](https://leetcode.com/problems/add-binary/) [[S]](67.%20Add%20Binary) 0067. Add Binary 
- [X] 😊 [[Q]](https://leetcode.com/problems/sqrtx/) [[S]](69-Sqrt(x)) 0069. Sqrt(x) *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/climbing-stairs/) [[S]](70-Climbing%20Stairs) 0070. Climbing Stairs *[DP]*
- [X] 😫 [[Q]](https://leetcode.com/problems/edit-distance/) [[S]](72-Edit%20Distance) 0072. Edit Distance *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/sort-colors/) [[S]](75.%20Sort%20Colors) 0075. Sort Colors *[Array, Two Pointers]*
- [X] 😫 [[Q]](https://leetcode.com/problems/minimum-window-substring/) [[S]](76.%20Minimum%20Window%20Substring) 0076. Minimum Window Substring *[Sliding Windows, Hash Table, O(n)]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/subsets/) [[S]](78.%20Subsets) 0078. Subsets *[Bit Manipulation]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/) [[S]](80.%20Remove%20Duplicates%20from%20Sorted%20Array%20II) 0080. Remove Duplicates from Sorted Array II *[Array, Two Pointers]*
- [X] 😫 [[Q]](https://leetcode.com/problems/scramble-string/) [[S]](87-Scramble%20String) 0087. Scramble String *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/subsets-ii/) [[S]](90.%20Subsets%20II) 0090. Subsets II *[Array, Hash Table]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/decode-ways/) [[S]](91-Decode%20Ways) 0091. Decode Ways *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/reverse-linked-list-ii/) [[S]](92.%20Reverse%20Linked%20List%20II) 0092. Reverse Linked List II *[Linked List]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/unique-binary-search-trees/) [[S]](96.%20Unique%20Binary%20Search%20Trees) 0096. Unique Binary Search Trees *[Tree]*
- [X] 😫 [[Q]](https://leetcode.com/problems/interleaving-string/) [[S]](97-Interleaving%20String) 0097. Interleaving String *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/same-tree/) [[S]](100.%20Same%20Tree) 0100. Same Tree *[Tree]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/binary-tree-level-order-traversal/) [[S]](102.%20Binary%20Tree%20Level%20Order%20Traversal) 0102. Binary Tree Level Order Traversal *[Tree, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/) [[S]](103.%20Binary%20Tree%20Zigzag%20Level%20Order%20Traversal) 0103. Binary Tree Zigzag Level Order Traversal *[Tree, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/) [[S]](105.%20Construct%20Binary%20Tree%20from%20Preorder%20and%20Inorder%20Traversal) 0105. Construct Binary Tree from Preorder and Inorder Traversal *[Tree]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/) [[S]](106.%20Construct%20Binary%20Tree%20from%20Inorder%20and%20Postorder%20Traversal) 0106. Construct Binary Tree from Inorder and Postorder Traversal *[Tree]*
- [X] 😊 [[Q]](https://leetcode.com/problems/binary-tree-level-order-traversal-ii/) [[S]](107.%20Binary%20Tree%20Level%20Order%20Traversal%20II) 0107. Binary Tree Level Order Traversal II *[BFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/path-sum/) [[S]](112.%20Path%20Sum) 0112. Path Sum *[Tree, DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/path-sum-ii/) [[S]](113.%20Path%20Sum%20II) 0113. Path Sum II *[Tree, DFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/pascals-triangle/) [[S]](118.%20Pascal's%20Triangle) 0118. Pascal's Triangle 
- [X] 😊 [[Q]](https://leetcode.com/problems/pascals-triangle-ii/) [[S]](119.%20Pascal's%20Triangle%20II) 0119. Pascal's Triangle II 
- [X] 🤨 [[Q]](https://leetcode.com/problems/triangle/) [[S]](120-Triangle) 0120. Triangle *[DP, Graph, Shortest Path]*
- [X] 😊 [[Q]](https://leetcode.com/problems/best-time-to-buy-and-sell-stock/) [[S]](121-Best%20Time%20to%20Buy%20and%20Sell%20Stock) 0121. Best Time to Buy and Sell Stock *[DP, State Machine]*
- [X] 😊 [[Q]](https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/) [[S]](122-Best%20Time%20to%20Buy%20and%20Sell%20Stock%20II) 0122. Best Time to Buy and Sell Stock II *[Greedy]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/) [[S]](123-Best%20Time%20to%20Buy%20and%20Sell%20Stock%20III) 0123. Best Time to Buy and Sell Stock III *[DP, State Machine]*
- [X] 😊 [[Q]](https://leetcode.com/problems/valid-palindrome/) [[S]](125.%20Valid%20Palindrome) 0125. Valid Palindrome 
- [X] 🤨 [[Q]](https://leetcode.com/problems/word-ladder/) [[S]](127-Word%20Ladder) 0127. Word Ladder *[Graph, BFS, Shortest Path]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/sum-root-to-leaf-numbers/) [[S]](129.%20Sum%20Root%20to%20Leaf%20Numbers) 0129. Sum Root to Leaf Numbers *[Tree, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/surrounded-regions/) [[S]](130.%20Surrounded%20Regions) 0130. Surrounded Regions *[Graph, DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/palindrome-partitioning/) [[S]](131-Palindrome%20Partitioning) 0131. Palindrome Partitioning *[DP]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/palindrome-partitioning-ii/) [[S]](132-Palindrome%20Partitioning%20II) 0132. Palindrome Partitioning II *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/clone-graph/) [[S]](133.%20Clone%20Graph) 0133. Clone Graph *[Graph]*
- [X] 😫 [[Q]](https://leetcode.com/problems/candy/) [[S]](135.%20Candy) 0135. Candy *[Greedy, O(n)]*
- [X] 😊 [[Q]](https://leetcode.com/problems/single-number/) [[S]](136.%20Single%20Number) 0136. Single Number *[Bit Manipulation]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/single-number-ii/) [[S]](137.%20Single%20Number%20II) 0137. Single Number II *[Bit Manipulation, State Machine]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/word-break/) [[S]](139-Word%20Break) 0139. Word Break *[DP]*
- [X] 😫 [[Q]](https://leetcode.com/problems/word-break-ii/) [[S]](140.%20Word%20Break%20II) 0140. Word Break II *[DP, DFS, String]*
- [X] 😊 [[Q]](https://leetcode.com/problems/linked-list-cycle/) [[S]](141.%20Linked%20List%20Cycle) 0141. Linked List Cycle *[Linked List, Two Pointers]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/linked-list-cycle-ii/) [[S]](142.%20Linked%20List%20Cycle%20II) 0142. Linked List Cycle II *[Linked List, Two Pointers]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/reorder-list/) [[S]](143.%20Reorder%20List) 0143. Reorder List *[Linked List]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/reverse-words-in-a-string/) [[S]](151.%20Reverse%20Words%20in%20a%20String) 0151. Reverse Words in a String 
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/) [[S]](153.%20Find%20Minimum%20in%20Rotated%20Sorted%20Array) 0153. Find Minimum in Rotated Sorted Array *[Binary Search]*
- [X] 😫 [[Q]](https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/) [[S]](154.%20Find%20Minimum%20in%20Rotated%20Sorted%20Array%20II) 0154. Find Minimum in Rotated Sorted Array II *[Binary Search]*
- [X] 😊 [[Q]](https://leetcode.com/problems/majority-element/) [[S]](169-Majority%20Element) 0169. Majority Element *[Array]*
- [X] 😊 [[Q]](https://leetcode.com/problems/excel-sheet-column-number/) [[S]](171.%20Excel%20Sheet%20Column%20Number) 0171. Excel Sheet Column Number 
- [X] 🔞 [[Q]](https://leetcode.com/problems/dungeon-game/) [[S]](174.%20Dungeon%20Game) 0174. Dungeon Game *[DP]*
- [X] 😫 [[Q]](https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/) [[S]](188.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock%20IV) 0188. Best Time to Buy and Sell Stock IV *[Greedy, DP, State Machine]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/reverse-bits/) [[S]](190.%20Reverse%20Bits) 0190. Reverse Bits *[Bit Manipulation]*
- [X] 😊 [[Q]](https://leetcode.com/problems/number-of-1-bits/) [[S]](191.%20Number%20of%201%20Bits) 0191. Number of 1 Bits 
- [X] 🤨 [[Q]](https://leetcode.com/problems/binary-tree-right-side-view/) [[S]](199-Binary%20Tree%20Right%20Side%20View) 0199. Binary Tree Right Side View *[Tree, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/bitwise-and-of-numbers-range/) [[S]](201.%20Bitwise%20AND%20of%20Numbers%20Range) 0201. Bitwise AND of Numbers Range *[Bit Manipulation]*
- [X] 😊 [[Q]](https://leetcode.com/problems/remove-linked-list-elements/) [[S]](203.%20Remove%20Linked%20List%20Elements) 0203. Remove Linked List Elements *[Linked List]*
- [X] 😊 [[Q]](https://leetcode.com/problems/count-primes/) [[S]](204-Count%20Primes) 0204. Count Primes *[Mathematics]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/reverse-linked-list/) [[S]](206.%20Reverse%20Linked%20List) 0206. Reverse Linked List *[Linked List]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/course-schedule/) [[S]](207-Course%20Schedule) 0207. Course Schedule *[Graph]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/implement-trie-prefix-tree/) [[S]](208-Implement%20Trie%20(Prefix%20Tree)) 0208. Implement Trie (Prefix Tree) *[Tree]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/minimum-size-subarray-sum/) [[S]](209.%20Minimum%20Size%20Subarray%20Sum) 0209. Minimum Size Subarray Sum *[Sliding Windows, Array, O(n)]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/course-schedule-ii/) [[S]](210-Course%20Schedule%20II) 0210. Course Schedule II *[Graph]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/design-add-and-search-words-data-structure/) [[S]](211.%20Add%20and%20Search%20Word%20-%20Data%20structure%20design) 0211. Design Add and Search Words Data Structure *[Tree, DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/combination-sum-iii/) [[S]](216.%20Combination%20Sum%20III) 0216. Combination Sum III *[DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/count-complete-tree-nodes/) [[S]](222.%20Count%20Complete%20Tree%20Nodes) 0222. Count Complete Tree Nodes *[Tree]*
- [X] 😊 [[Q]](https://leetcode.com/problems/invert-binary-tree/) [[S]](226-Invert%20Binary%20Tree) 0226. Invert Binary Tree *[Tree]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/kth-smallest-element-in-a-bst/) [[S]](230-Kth%20Smallest%20Element%20in%20a%20BST) 0230. Kth Smallest Element in a BST *[Tree, DFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/power-of-two/) [[S]](231-Power%20of%20Two) 0231. Power of Two *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/delete-node-in-a-linked-list/) [[S]](237-Delete%20Node%20in%20a%20Linked%20List) 0237. Delete Node in a Linked List *[Linked List]*
- [X] 😊 [[Q]](https://leetcode.com/problems/valid-anagram/) [[S]](242-Valid%20Anagram) 0242. Valid Anagram *[Hash Table]*
- [X] 😊 [[Q]](https://leetcode.com/problems/add-digits/) [[S]](258.%20Add%20Digits) 0258. Add Digits *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/single-number-iii/) [[S]](260.%20Single%20Number%20III) 0260. Single Number III *[Bit Manipulation, O(n)]*
- [X] 😊 [[Q]](https://leetcode.com/problems/ugly-number/) [[S]](263.%20Ugly%20Number) 0263. Ugly Number 
- [X] 🤨 [[Q]](https://leetcode.com/problems/ugly-number-ii/) [[S]](264.%20Ugly%20Number%20II) 0264. Ugly Number II *[Mathematics, Two Pointers]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/h-index/) [[S]](274.%20H-Index) 0274. H-Index *[Array, Sort]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/h-index-ii/) [[S]](275.%20H-Index%20II) 0275. H-Index II *[Binary Search, Array]*
- [X] 😊 [[Q]](https://leetcode.com/problems/first-bad-version/) [[S]](278-First%20Bad%20Version) 0278. First Bad Version *[Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/perfect-squares/) [[S]](279.%20Perfect%20Squares) 0279. Perfect Squares *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-the-duplicate-number/) [[S]](287.%20Find%20the%20Duplicate%20Number) 0287. Find the Duplicate Number *[Binary Search, Two Pointers]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/find-median-from-data-stream/) [[S]](295.%20Find%20Median%20from%20Data%20Stream) 0295. Find Median from Data Stream *[Heap]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/longest-increasing-subsequence/) [[S]](300.%20Longest%20Increasing%20Subsequence) 0300. Longest Increasing Subsequence *[DP, Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/) [[S]](309.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock%20with%20Cooldown) 0309. Best Time to Buy and Sell Stock with Cooldown *[DP, State Machine, O(n)]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/minimum-height-trees/) [[S]](310-Minimum%20Height%20Trees) 0310. Minimum Height Trees *[Tree]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/count-of-smaller-numbers-after-self/) [[S]](315.%20Count%20of%20Smaller%20Numbers%20After%20Self) 0315. Count of Smaller Numbers After Self *[Sort, Divide & Conquer]*
- [X] 😊 [[Q]](https://leetcode.com/problems/power-of-three/) [[S]](326.%20Power%20of%20Three) 0326. Power of Three 
- [X] 🤨 [[Q]](https://leetcode.com/problems/odd-even-linked-list/) [[S]](328-Odd%20Even%20Linked%20List) 0328. Odd Even Linked List *[Linked List]*
- [X] 😫 [[Q]](https://leetcode.com/problems/longest-increasing-path-in-a-matrix/) [[S]](329-Longest%20Increasing%20Path%20in%20a%20Matrix) 0329. Longest Increasing Path in a Matrix *[Graph]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/reconstruct-itinerary/) [[S]](332.%20Reconstruct%20Itinerary) 0332. Reconstruct Itinerary *[DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/counting-bits/) [[S]](338-Counting%20Bits) 0338. Counting Bits *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/power-of-four/) [[S]](342.%20Power%20of%20Four) 0342. Power of Four *[Bit Manipulation]*
- [X] 😊 [[Q]](https://leetcode.com/problems/reverse-string/) [[S]](344-Reverse%20String) 0344. Reverse String 
- [X] 🤨 [[Q]](https://leetcode.com/problems/top-k-frequent-elements/) [[S]](347.%20Top%20K%20Frequent%20Elements) 0347. Top K Frequent Elements 
- [X] 😊 [[Q]](https://leetcode.com/problems/intersection-of-two-arrays-ii/) [[S]](350.%20Intersection%20of%20Two%20Arrays%20II) 0350. Intersection of Two Arrays II *[Two Pointers]*
- [X] 😊 [[Q]](https://leetcode.com/problems/valid-perfect-square/) [[S]](367-Valid%20Perfect%20Square) 0367. Valid Perfect Square *[Mathematics, Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/largest-divisible-subset/) [[S]](368.%20Largest%20Divisible%20Subset) 0368. Largest Divisible Subset *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/super-pow/) [[S]](372-Super%20Pow) 0372. Super Pow *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/combination-sum-iv/) [[S]](377.%20Combination%20Sum%20IV) 0377. Combination Sum IV *[DFS, DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/insert-delete-getrandom-o1/) [[S]](380.%20Insert%20Delete%20GetRandom%20O(1)) 0380. Insert Delete GetRandom O(1) *[Hash Table]*
- [X] 😊 [[Q]](https://leetcode.com/problems/ransom-note/) [[S]](383-Ransom%20Note) 0383. Ransom Note *[Hash Table]*
- [X] 😊 [[Q]](https://leetcode.com/problems/first-unique-character-in-a-string/) [[S]](387-First%20Unique%20Character%20in%20a%20String) 0387. First Unique Character in a String *[String]*
- [X] 😊 [[Q]](https://leetcode.com/problems/find-the-difference/) [[S]](389.%20Find%20the%20Difference) 0389. Find the Difference *[Bit Manipulation]*
- [X] 😊 [[Q]](https://leetcode.com/problems/is-subsequence/) [[S]](392.%20Is%20Subsequence) 0392. Is Subsequence *[DP, Greedy, Two Pointers, Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/integer-replacement/) [[S]](397.%20Integer%20Replacement) 0397. Integer Replacement *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/evaluate-division/) [[S]](399-Evaluate%20Division) 0399. Evaluate Division *[Graph, Shortest Path]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/remove-k-digits/) [[S]](402-Remove%20K%20Digits) 0402. Remove K Digits *[Mathematics, Stack, Greedy]*
- [X] 😊 [[Q]](https://leetcode.com/problems/sum-of-left-leaves/) [[S]](404.%20Sum%20of%20Left%20Leaves) 0404. Sum of Left Leaves *[Tree, DFS]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/queue-reconstruction-by-height/) [[S]](406-Queue%20Reconstruction%20by%20Height) 0406. Queue Reconstruction by Height *[Greedy, Sort]*
- [X] 😊 [[Q]](https://leetcode.com/problems/longest-palindrome/) [[S]](409-Longest%20Palindrome) 0409. Longest Palindrome 
- [X] 😫 [[Q]](https://leetcode.com/problems/split-array-largest-sum/) [[S]](410.%20Split%20Array%20Largest%20Sum) 0410. Split Array Largest Sum *[Binary Search]*
- [X] 😊 [[Q]](https://leetcode.com/problems/fizz-buzz/) [[S]](412.%20Fizz%20Buzz) 0412. Fizz Buzz 
- [X] 🤨 [[Q]](https://leetcode.com/problems/pacific-atlantic-water-flow/) [[S]](417-Pacific%20Atlantic%20Water%20Flow) 0417. Pacific Atlantic Water Flow *[DFS, Graph]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/) [[S]](430.%20Flatten%20a%20Multilevel%20Doubly%20Linked%20List) 0430. Flatten a Multilevel Doubly Linked List *[Tree]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/non-overlapping-intervals/) [[S]](435.%20Non-overlapping%20Intervals) 0435. Non-overlapping Intervals *[Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-right-interval/) [[S]](436.%20Find%20Right%20Interval) 0436. Find Right Interval *[Hash Table, Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/path-sum-iii/) [[S]](437.%20Path%20Sum%20III) 0437. Path Sum III *[Hash Table, Tree, DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-all-anagrams-in-a-string/) [[S]](438-Find%20All%20Anagrams%20in%20a%20String) 0438. Find All Anagrams in a String *[Array]*
- [X] 😊 [[Q]](https://leetcode.com/problems/arranging-coins/) [[S]](441.%20Arranging%20Coins) 0441. Arranging Coins *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-all-duplicates-in-an-array/) [[S]](442.%20Find%20All%20Duplicates%20in%20an%20Array) 0442. Find All Duplicates in an Array *[Array, O(n)]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/sort-characters-by-frequency/) [[S]](451-Sort%20Characters%20By%20Frequency) 0451. Sort Characters By Frequency *[Hash Table, String]*
- [X] 😊 [[Q]](https://leetcode.com/problems/hamming-distance/) [[S]](461.%20Hamming%20Distance) 0461. Hamming Distance 
- [X] 😊 [[Q]](https://leetcode.com/problems/island-perimeter/) [[S]](463.%20Island%20Perimeter) 0463. Island Perimeter 
- [X] 🤨 [[Q]](https://leetcode.com/problems/validate-ip-address/) [[S]](468.%20Validate%20IP%20Address) 0468. Validate IP Address 
- [X] 🔞 [[Q]](https://leetcode.com/problems/implement-rand10-using-rand7/) [[S]](470.%20Implement%20Rand10()%20Using%20Rand7()) 0470. Implement Rand10() Using Rand7() *[Mathematics]*
- [X] 😫 [[Q]](https://leetcode.com/problems/concatenated-words/) [[S]](472-Concatenated%20Words) 0472. Concatenated Words *[String, Tree, DFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/number-complement/) [[S]](476-Number%20Complement) 0476. Number Complement *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/total-hamming-distance/) [[S]](477.%20Total%20Hamming%20Distance) 0477. Total Hamming Distance *[Bit Manipulation]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/predict-the-winner/) [[S]](486.%20Predict%20the%20Winner) 0486. Predict the Winner *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/construct-the-rectangle/) [[S]](492.%20Construct%20the%20Rectangle) 0492. Construct the Rectangle 
- [X] 😫 [[Q]](https://leetcode.com/problems/reverse-pairs/) [[S]](493.%20Reverse%20Pairs) 0493. Reverse Pairs *[Sort, Two Pointers, Divide & Conquer]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/) [[S]](497.%20Random%20Point%20in%20Non-overlapping%20Rectangles) 0497. Random Point in Non-overlapping Rectangles *[Binary Search]*
- [X] 😊 [[Q]](https://leetcode.com/problems/relative-ranks/) [[S]](506.%20Relative%20Ranks) 0506. Relative Ranks 
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-largest-value-in-each-tree-row/) [[S]](515-Find%20Largest%20Value%20in%20Each%20Tree%20Row) 0515. Find Largest Value in Each Tree Row *[Tree, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/coin-change-2/) [[S]](518-Coin%20Change%202) 0518. Coin Change 2 *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/detect-capital/) [[S]](520.%20Detect%20Capital) 0520. Detect Capital 
- [X] 🤨 [[Q]](https://leetcode.com/problems/contiguous-array/) [[S]](525-Contiguous%20Array) 0525. Contiguous Array *[Array]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/random-pick-with-weight/) [[S]](528-Random%20Pick%20with%20Weight) 0528. Random Pick with Weight *[Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/single-element-in-a-sorted-array/) [[S]](540-Single%20Element%20in%20a%20Sorted%20Array) 0540. Single Element in a Sorted Array *[Binary Search]*
- [X] 😊 [[Q]](https://leetcode.com/problems/maximum-depth-of-n-ary-tree/) [[S]](559-Maximum%20Depth%20of%20N-ary%20Tree) 0559. Maximum Depth of N-ary Tree *[BFS, Tree]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/permutation-in-string/) [[S]](567-Permutation%20in%20String) 0567. Permutation in String 
- [X] 🤨 [[Q]](https://leetcode.com/problems/valid-square/) [[S]](593.%20Valid%20Square) 0593. Valid Square 
- [X] 🔞 [[Q]](https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/) [[S]](600.%20Non-negative%20Integers%20without%20Consecutive%20Ones) 0600. Non-negative Integers without Consecutive Ones *[DP, Bit Manipulation]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/task-scheduler/) [[S]](621.%20Task%20Scheduler) 0621. Task Scheduler *[Heap, Sort, O(n)]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/course-schedule-iii/) [[S]](630.%20Course%20Schedule%20III) 0630. Course Schedule III *[Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/maximum-width-of-binary-tree/) [[S]](662.%20Maximum%20Width%20of%20Binary%20Tree) 0662. Maximum Width of Binary Tree *[Tree]*
- [X] 😊 [[Q]](https://leetcode.com/problems/repeated-string-match/) [[S]](686.%20Repeated%20String%20Match) 0686. Repeated String Match *[String]*
- [X] 😊 [[Q]](https://leetcode.com/problems/binary-number-with-alternating-bits/) [[S]](693.%20Binary%20Number%20with%20Alternating%20Bits) 0693. Binary Number with Alternating Bits *[Bit Manipulation]*
- [X] 😊 [[Q]](https://leetcode.com/problems/search-in-a-binary-search-tree/) [[S]](700.%20Search%20in%20a%20Binary%20Search%20Tree) 0700. Search in a Binary Search Tree *[Tree]*
- [X] 😊 [[Q]](https://leetcode.com/problems/design-hashset/) [[S]](705.%20Design%20HashSet) 0705. Design HashSet *[Hash Table]*
- [X] 😫 [[Q]](https://leetcode.com/problems/random-pick-with-blacklist/) [[S]](710.%20Random%20Pick%20with%20Blacklist) 0710. Random Pick with Blacklist *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/) [[S]](714.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock%20with%20Transaction%20Fee) 0714. Best Time to Buy and Sell Stock with Transaction Fee *[DP, State Machine, O(n)]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/split-linked-list-in-parts/) [[S]](725.%20Split%20Linked%20List%20in%20Parts) 0725. Split Linked List in Parts *[Linked List]*
- [X] 😊 [[Q]](https://leetcode.com/problems/flood-fill/) [[S]](733-Flood%20Fill) 0733. Flood Fill *[Graph, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/network-delay-time/) [[S]](743-Network%20Delay%20Time) 0743. Network Delay Time *[Graph, Shortest Path]*
- [X] 😊 [[Q]](https://leetcode.com/problems/min-cost-climbing-stairs/) [[S]](746-Min%20Cost%20Climbing%20Stairs) 0746. Min Cost Climbing Stairs *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/partition-labels/) [[S]](763.%20Partition%20Labels) 0763. Partition Labels *[Greedy]*
- [X] 😊 [[Q]](https://leetcode.com/problems/jewels-and-stones/) [[S]](771-Jewels%20and%20Stones%20) 0771. Jewels and Stones *[Hash Table]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/letter-case-permutation/) [[S]](784.%20Letter%20Case%20Permutation) 0784. Letter Case Permutation 
- [X] 🤨 [[Q]](https://leetcode.com/problems/is-graph-bipartite/) [[S]](785.%20Is%20Graph%20Bipartite?) 0785. Is Graph Bipartite? *[Graph, DFS]*
- [X] 📝 [[Q]](https://leetcode.com/problems/cheapest-flights-within-k-stops/) [[S]](787.%20Cheapest%20Flights%20Within%20K%20Stops) 0787. Cheapest Flights Within K Stops *[Graph, Shortest Path]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/all-paths-from-source-to-target/) [[S]](797.%20All%20Paths%20From%20Source%20to%20Target) 0797. All Paths From Source to Target *[DFS, Graph]*
- [X] 😫 [[Q]](https://leetcode.com/problems/bus-routes/) [[S]](815.%20Bus%20Routes) 0815. Bus Routes *[BFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/goat-latin/) [[S]](824.%20Goat%20Latin) 0824. Goat Latin 
- [X] 😊 [[Q]](https://leetcode.com/problems/flipping-an-image/) [[S]](832.%20Flipping%20an%20Image) 0832. Flipping an Image 
- [X] 📝 [[Q]](https://leetcode.com/problems/similar-string-groups/) [[S]](839-Similar%20String%20Groups) 0839. Similar String Groups 
- [X] 🤨 [[Q]](https://leetcode.com/problems/shifting-letters/) [[S]](848.%20Shifting%20Letters) 0848. Shifting Letters 
- [X] 😫 [[Q]](https://leetcode.com/problems/rectangle-area-ii/) [[S]](850-Rectangle%20Area%20II) 0850. Rectangle Area II *[Mathematics]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/minimum-cost-to-hire-k-workers/) [[S]](857.%20Minimum%20Cost%20to%20Hire%20K%20Workers) 0857. Minimum Cost to Hire K Workers *[Heap, Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/boats-to-save-people/) [[S]](881-Boats%20to%20Save%20People) 0881. Boats to Save People *[Greedy, Two Pointers]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/possible-bipartition/) [[S]](886-Possible%20Bipartition) 0886. Possible Bipartition *[Graph, DFS]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/super-egg-drop/) [[S]](887.%20Super%20Egg%20Drop) 0887. Super Egg Drop *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/monotonic-array/) [[S]](896.%20Monotonic%20Array) 0896. Monotonic Array 
- [X] 🤨 [[Q]](https://leetcode.com/problems/online-stock-span/) [[S]](901-Online%20Stock%20Span) 0901. Online Stock Span *[Array, Stack]*
- [X] 😊 [[Q]](https://leetcode.com/problems/sort-array-by-parity/) [[S]](905.%20Sort%20Array%20By%20Parity) 0905. Sort Array By Parity *[Sort, O(n)]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/sort-an-array/) [[S]](912-Sort%20an%20Array) 0912. Sort an Array *[Sort]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/maximum-sum-circular-subarray/) [[S]](918-Maximum%20Sum%20Circular%20Subarray) 0918. Maximum Sum Circular Subarray *[DP]*
- [X] 😫 [[Q]](https://leetcode.com/problems/number-of-music-playlists/) [[S]](920.%20Number%20of%20Music%20Playlists) 0920. Number of Music Playlists *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/sort-array-by-parity-ii/) [[S]](922.%20Sort%20Array%20By%20Parity%20II) 0922. Sort Array By Parity II *[Sort, O(n)]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/minimum-falling-path-sum/) [[S]](931.%20Minimum%20Falling%20Path%20Sum) 0931. Minimum Falling Path Sum *[DP]*
- [X] 😫 [[Q]](https://leetcode.com/problems/stamping-the-sequence/) [[S]](936-Stamping%20The%20Sequence) 0936. Stamping The Sequence *[Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/prison-cells-after-n-days/) [[S]](957.%20Prison%20Cells%20After%20N%20Days) 0957. Prison Cells After N Days *[Hash Table]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/maximum-width-ramp/) [[S]](962.%20Maximum%20Width%20Ramp) 0962. Maximum Width Ramp *[Stack, Two Pointers]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/numbers-with-same-consecutive-differences/) [[S]](967.%20Numbers%20With%20Same%20Consecutive%20Differences) 0967. Numbers With Same Consecutive Differences *[DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/k-closest-points-to-origin/) [[S]](973-K%20Closest%20Points%20to%20Origin) 0973. K Closest Points to Origin *[Sort]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/subarray-sums-divisible-by-k/) [[S]](974-Subarray%20Sums%20Divisible%20by%20K) 0974. Subarray Sums Divisible by K *[Hash Table]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/longest-turbulent-subarray/) [[S]](978-Longest%20Turbulent%20Subarray) 0978. Longest Turbulent Subarray *[DP, Sliding Windows]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/minimum-cost-for-tickets/) [[S]](983.%20Minimum%20Cost%20For%20Tickets) 0983. Minimum Cost For Tickets *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/string-without-aaa-or-bbb/) [[S]](984-String%20Without%20AAA%20or%20BBB) 0984. String Without AAA or BBB *[Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/interval-list-intersections/) [[S]](986-Interval%20List%20Intersections) 0986. Interval List Intersections *[Two Pointers, Greedy]*
- [X] 🤬 [[Q]](https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/) [[S]](987.%20Vertical%20Order%20Traversal%20of%20a%20Binary%20Tree) 0987. Vertical Order Traversal of a Binary Tree *[Tree, DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/satisfiability-of-equality-equations/) [[S]](990-Satisfiability%20of%20Equality%20Equations) 0990. Satisfiability of Equality Equations *[Union Find]*
- [X] 😊 [[Q]](https://leetcode.com/problems/cousins-in-binary-tree/) [[S]](993-Cousins%20in%20Binary%20Tree) 0993. Cousins in Binary Tree *[Tree, DFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/rotting-oranges/) [[S]](994.%20Rotting%20Oranges) 0994. Rotting Oranges *[Graph, BFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/find-the-town-judge/) [[S]](997-Find%20the%20Town%20Judge) 0997. Find the Town Judge *[Graph]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/) [[S]](1008-Construct%20Binary%20Search%20Tree%20from%20Preorder%20Traversal) 1008. Construct Binary Search Tree from Preorder Traversal *[Tree]*
- [X] 😊 [[Q]](https://leetcode.com/problems/complement-of-base-10-integer/) [[S]](1009-Complement%20of%20Base%2010%20Integer) 1009. Complement of Base 10 Integer *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/remove-outermost-parentheses/) [[S]](1021.%20Remove%20Outermost%20Parentheses) 1021. Remove Outermost Parentheses *[Stack]*
- [X] 😊 [[Q]](https://leetcode.com/problems/divisor-game/) [[S]](1025.%20Divisor%20Game) 1025. Divisor Game *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/two-city-scheduling/) [[S]](1029-Two%20City%20Scheduling) 1029. Two City Scheduling *[Greedy]*
- [X] 😫 [[Q]](https://leetcode.com/problems/stream-of-characters/) [[S]](1032.%20Stream%20of%20Characters) 1032. Stream of Characters *[Tree, String]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/uncrossed-lines/) [[S]](1035-Uncrossed%20Lines) 1035. Uncrossed Lines *[DP]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/partition-array-for-maximum-sum/) [[S]](1043.%20Partition%20Array%20for%20Maximum%20Sum) 1043. Partition Array for Maximum Sum *[DP]*
- [X] 🤬 [[Q]](https://leetcode.com/problems/longest-duplicate-substring/) [[S]](1044.%20Longest%20Duplicate%20Substring) 1044. Longest Duplicate Substring *[Hash Table, Sliding Windows, String, Binary Search]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/largest-values-from-labels/) [[S]](1090.%20Largest%20Values%20From%20Labels) 1090. Largest Values From Labels *[Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/car-pooling/) [[S]](1094.%20Car%20Pooling) 1094. Car Pooling *[Array]*
- [X] 😊 [[Q]](https://leetcode.com/problems/distribute-candies-to-people/) [[S]](1103.%20Distribute%20Candies%20to%20People) 1103. Distribute Candies to People 
- [X] 😊 [[Q]](https://leetcode.com/problems/defanging-an-ip-address/) [[S]](1108-Defanging%20an%20IP%20Address) 1108. Defanging an IP Address 
- [X] 😊 [[Q]](https://leetcode.com/problems/relative-sort-array/) [[S]](1122.%20Relative%20Sort%20Array) 1122. Relative Sort Array *[Hash Table, Sort]*
- [X] 😊 [[Q]](https://leetcode.com/problems/minimum-absolute-difference/) [[S]](1200.%20Minimum%20Absolute%20Difference) 1200. Minimum Absolute Difference 
- [X] 🔞 [[Q]](https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies/) [[S]](1203.%20Sort%20Items%20by%20Groups%20Respecting%20Dependencies) 1203. Sort Items by Groups Respecting Dependencies *[Graph, DFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/split-a-string-in-balanced-strings/) [[S]](1221.%20Split%20a%20String%20in%20Balanced%20Strings) 1221. Split a String in Balanced Strings 
- [X] 😊 [[Q]](https://leetcode.com/problems/check-if-it-is-a-straight-line/) [[S]](1232-Check%20If%20It%20Is%20a%20Straight%20Line) 1232. Check If It Is a Straight Line *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/remove-sub-folders-from-the-filesystem/) [[S]](1233.%20Remove%20Sub-Folders%20from%20the%20Filesystem) 1233. Remove Sub-Folders from the Filesystem *[Tree, DFS, String, Binary Search]*
- [X] 😫 [[Q]](https://leetcode.com/problems/maximum-profit-in-job-scheduling/) [[S]](1235.%20Maximum%20Profit%20in%20Job%20Scheduling) 1235. Maximum Profit in Job Scheduling *[DP, Binary Search]*
- [X] 😫 [[Q]](https://leetcode.com/problems/check-if-it-is-a-good-array/) [[S]](1250.%20Check%20If%20It%20Is%20a%20Good%20Array) 1250. Check If It Is a Good Array *[Mathematics]*
- [X] 🔞 [[Q]](https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location/) [[S]](1263-Minimum%20Moves%20to%20Move%20a%20Box%20to%20Their%20Target%20Location) 1263. Minimum Moves to Move a Box to Their Target Location *[Graph, BFS, Shortest Path]*
- [X] 😊 [[Q]](https://leetcode.com/problems/minimum-time-visiting-all-points/) [[S]](1266.%20Minimum%20Time%20Visiting%20All%20Points%20copy) 1266. Minimum Time Visiting All Points 
- [X] 🔞 [[Q]](https://leetcode.com/problems/count-square-submatrices-with-all-ones/) [[S]](1277-Count%20Square%20Submatrices%20with%20All%20Ones) 1277. Count Square Submatrices with All Ones *[DP]*
- [X] 😫 [[Q]](https://leetcode.com/problems/palindrome-partitioning-iii/) [[S]](1278-Palindrome%20Partitioning%20III) 1278. Palindrome Partitioning III *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/) [[S]](1281.%20Subtract%20the%20Product%20and%20Sum%20of%20Digits%20of%20an%20Integer) 1281. Subtract the Product and Sum of Digits of an Integer 
- [X] 🤨 [[Q]](https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/) [[S]](1282.%20Group%20the%20People%20Given%20the%20Group%20Size%20They%20Belong%20To) 1282. Group the People Given the Group Size They Belong To 
- [X] 🤨 [[Q]](https://leetcode.com/problems/iterator-for-combination/) [[S]](1286.%20Iterator%20for%20Combination) 1286. Iterator for Combination *[Bit Manipulation]*
- [X] 📝 [[Q]](https://leetcode.com/problems/minimum-falling-path-sum-ii/) [[S]](1289.%20Minimum%20Falling%20Path%20Sum%20II) 1289. Minimum Falling Path Sum II *[DP]*
- [X] 😊 [[Q]](https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/) [[S]](1290.%20Convert%20Binary%20Number%20in%20a%20Linked%20List%20to%20Integer) 1290. Convert Binary Number in a Linked List to Integer *[Bit Manipulation]*
- [X] 😊 [[Q]](https://leetcode.com/problems/find-numbers-with-even-number-of-digits/) [[S]](1295.%20Find%20Numbers%20with%20Even%20Number%20of%20Digits) 1295. Find Numbers with Even Number of Digits 
- [X] 😊 [[Q]](https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/) [[S]](1299.%20Replace%20Elements%20with%20Greatest%20Element%20on%20Right%20Side) 1299. Replace Elements with Greatest Element on Right Side 
- [X] 🤨 [[Q]](https://leetcode.com/problems/jump-game-iii/) [[S]](1306-Jump%20Game%20III) 1306. Jump Game III *[BFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping/) [[S]](1309.%20Decrypt%20String%20from%20Alphabet%20to%20Integer%20Mapping) 1309. Decrypt String from Alphabet to Integer Mapping 
- [X] 😊 [[Q]](https://leetcode.com/problems/decompress-run-length-encoded-list/) [[S]](1313.%20Decompress%20Run-Length%20Encoded%20List) 1313. Decompress Run-Length Encoded List 
- [X] 🤨 [[Q]](https://leetcode.com/problems/number-of-operations-to-make-network-connected/) [[S]](1319-Number%20of%20Operations%20to%20Make%20Network%20Connected) 1319. Number of Operations to Make Network Connected *[Graph, Union Find]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/) [[S]](1334-Find%20the%20City) 1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance *[Graph, Shortest Path]*
- [X] 😊 [[Q]](https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/) [[S]](1342-Number%20of%20Steps%20to%20Reduce%20a%20Number%20to%20Zero) 1342. Number of Steps to Reduce a Number to Zero 
- [X] 🤨 [[Q]](https://leetcode.com/problems/angle-between-hands-of-a-clock/) [[S]](1344.%20Angle%20Between%20Hands%20of%20a%20Clock) 1344. Angle Between Hands of a Clock 
- [X] 😫 [[Q]](https://leetcode.com/problems/jump-game-iv/) [[S]](1345.%20Jump%20Game%20IV) 1345. Jump Game IV *[BFS]*
- [X] 😊 [[Q]](https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/) [[S]](1351.%20Count%20Negative%20Numbers%20in%20a%20Sorted%20Matrix) 1351. Count Negative Numbers in a Sorted Matrix 
- [X] 😫 [[Q]](https://leetcode.com/problems/largest-multiple-of-three/) [[S]](1363.%20Largest%20Multiple%20of%20Three) 1363. Largest Multiple of Three *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/) [[S]](1365.%20How%20Many%20Numbers%20Are%20Smaller%20Than%20the%20Current%20Number) 1365. How Many Numbers Are Smaller Than the Current Number 
- [X] 🤨 [[Q]](https://leetcode.com/problems/linked-list-in-binary-tree/) [[S]](1367.%20Linked%20List%20in%20Binary%20Tree) 1367. Linked List in Binary Tree *[Tree, DFS]*
- [X] 😫 [[Q]](https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/) [[S]](1368.%20Minimum%20Cost%20to%20Make%20at%20Least%20One%20Valid%20Path%20in%20a%20Grid) 1368. Minimum Cost to Make at Least One Valid Path in a Grid *[Graph, Shortest Path]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/cinema-seat-allocation/) [[S]](1386.%20Cinema%20Seat%20Allocation) 1386. Cinema Seat Allocation *[Greedy]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid/) [[S]](1391.%20Check%20if%20There%20is%20a%20Valid%20Path%20in%20a%20Grid) 1391. Check if There is a Valid Path in a Grid *[Graph, BFS]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/count-number-of-teams/) [[S]](1395-Count%20Number%20of%20Teams) 1395. Count Number of Teams *[Mathematics]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/) [[S]](1404.%20Number%20of%20Steps%20to%20Reduce%20a%20Number%20in%20Binary%20Representation%20to%20One) 1404. Number of Steps to Reduce a Number in Binary Representation to One *[O(n), Bit Manipulation]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/longest-happy-string/) [[S]](1405-Longest%20Happy%20String) 1405. Longest Happy String *[Greedy]*
- [X] 😊 [[Q]](https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/) [[S]](1431-Kids%20With%20the%20Greatest%20Number%20of%20Candies) 1431. Kids With the Greatest Number of Candies *[Array]*
- [X] 🤨 [[Q]](https://leetcode.com/problems/max-difference-you-can-get-from-changing-an-integer/) [[S]](1432.%20Max%20Difference%20You%20Can%20Get%20From%20Changing%20an%20Integer) 1432. Max Difference You Can Get From Changing an Integer *[Mathematics, Greedy]*
- [X] 😊 [[Q]](https://leetcode.com/problems/destination-city/) [[S]](1436.%20Destination%20City) 1436. Destination City *[Hash Table, Graph]*
- [X] 😊 [[Q]](https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time/) [[S]](1450.%20Number%20of%20Students%20Doing%20Homework%20at%20a%20Given%20Time) 1450. Number of Students Doing Homework at a Given Time 
- [X] 🤨 [[Q]](https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree/) [[S]](1457.%20Pseudo-Palindromic%20Paths%20in%20a%20Binary%20Tree) 1457. Pseudo-Palindromic Paths in a Binary Tree *[Bit Manipulation, Tree]*
- [X] 😊 [[Q]](https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array/) [[S]](1464-Maximum%20Product%20of%20Two%20Elements%20in%20an%20Array) 1464. Maximum Product of Two Elements in an Array *[Mathematics]*
- [X] 😊 [[Q]](https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop/) [[S]](1475.%20Final%20Prices%20With%20a%20Special%20Discount%20in%20a%20Shop) 1475. Final Prices With a Special Discount in a Shop *[Stack, O(n)]*
- [X] 😊 [[Q]](https://leetcode.com/problems/path-crossing/) [[S]](1496.%20Path%20Crossing) 1496. Path Crossing *[Hash Table]*
*/

var array = ["Swift", "Playground", "LeetCode", "Bugen! 😄"]
array.forEach { print("Hello, \($0)") }